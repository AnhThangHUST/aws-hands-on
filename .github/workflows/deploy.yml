name: Build and Deploy to AWS

on:
  push:
    branches:
      - develop

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Setup JDK 1.8
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: github
          settings-path: ${{ github.workspace }}

      # Build and Test with Gradle
      - name: Build and Test with Maven
        run: mvn clean package

      - name: Deploy in EC2 using lib
        uses: cross-the-world/ssh-scp-ssh-pipelines@latest
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USER_NAME }}
          key: ${{ secrets.ONLY_PRIVATE_KEY }}
          scp: |
            target/SpringBootHelloWorldExampleApplication-1.war => ~/
          last_ssh: |
            java -jar target/SpringBootHelloWorldExampleApplication-1.war

#      - name: Deploy in EC2
#        env:
#          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
#          HOSTNAME: ${{ secrets.HOSTNAME  }}
#          USER_NAME: ${{ secrets.USER_NAME  }}
#
#        run: |
#          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
#          scp -o StrictHostKeyChecking=no -i private_key target/SpringBootHelloWorldExampleApplication-1.war ${USER_NAME}@${HOSTNAME}:~
#          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME}
#      # Configure AWS credentials
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ap-southeast-1

